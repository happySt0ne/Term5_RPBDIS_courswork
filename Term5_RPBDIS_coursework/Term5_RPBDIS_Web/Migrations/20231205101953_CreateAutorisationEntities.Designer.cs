// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Term5_RPBDIS_library;

#nullable disable

namespace Term5_RPBDIS_Web.Migrations
{
    [DbContext(typeof(ValuatingSystemContext))]
    [Migration("20231205101953_CreateAutorisationEntities")]
    partial class CreateAutorisationEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AchievementID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementId"));

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AchievementId")
                        .HasName("PK__Achievem__276330E0772BD94E");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Date", b =>
                {
                    b.Property<int>("DateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DateID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DateId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("DateId")
                        .HasName("PK__Dates__A426F253E09D6529");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Division", b =>
                {
                    b.Property<int>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DivisionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DivisionId"));

                    b.Property<int?>("MarkId")
                        .HasColumnType("int")
                        .HasColumnName("MarkID");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PlannedEfficiencyId")
                        .HasColumnType("int")
                        .HasColumnName("PlannedEfficiencyID");

                    b.Property<int?>("RealEfficiencyId")
                        .HasColumnType("int")
                        .HasColumnName("RealEfficiencyID");

                    b.HasKey("DivisionId")
                        .HasName("PK__Division__20EFC688A932A6C0");

                    b.HasIndex("MarkId");

                    b.HasIndex("PlannedEfficiencyId");

                    b.HasIndex("RealEfficiencyId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int?>("AchievementId")
                        .HasColumnType("int")
                        .HasColumnName("AchievementID");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int")
                        .HasColumnName("DivisionID");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("date");

                    b.Property<int?>("MarkId")
                        .HasColumnType("int")
                        .HasColumnName("MarkID");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF11880FDB5");

                    b.HasIndex("AchievementId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("MarkId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Mark", b =>
                {
                    b.Property<int>("MarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MarkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarkId"));

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("MarkId")
                        .HasName("PK__Marks__4E30D346FA635726");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.PlannedEfficiency", b =>
                {
                    b.Property<int>("PlannedEfficiencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlannedEfficiencyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlannedEfficiencyId"));

                    b.Property<int?>("DateId")
                        .HasColumnType("int")
                        .HasColumnName("DateID");

                    b.Property<int?>("Efficiecy")
                        .HasColumnType("int");

                    b.HasKey("PlannedEfficiencyId")
                        .HasName("PK__PlannedE__0642F6884D2F25DF");

                    b.HasIndex("DateId");

                    b.ToTable("PlannedEfficiencies");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.RealEfficiency", b =>
                {
                    b.Property<int>("RealEfficiencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RealEfficiencyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RealEfficiencyId"));

                    b.Property<int?>("DateId")
                        .HasColumnType("int")
                        .HasColumnName("DateID");

                    b.Property<int?>("Efficiecy")
                        .HasColumnType("int");

                    b.HasKey("RealEfficiencyId")
                        .HasName("PK__RealEffi__F21BFCE5E7E958DA");

                    b.HasIndex("DateId");

                    b.ToTable("RealEfficiencies");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.views.CompareRealPlannedEfficiency", b =>
                {
                    b.Property<string>("DivisionName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("PlannedEfficiecy")
                        .HasColumnType("int");

                    b.Property<int?>("RealEfficiecy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("CompareRealPlannedEfficiencies", (string)null);
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.views.DivisionsMark", b =>
                {
                    b.Property<string>("DivisionName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Mark")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("DivisionsMarks", (string)null);
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.views.WholeDivisionInfo", b =>
                {
                    b.Property<string>("DivisionName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("Mark")
                        .HasColumnType("int");

                    b.Property<int?>("PlannedEfficiency")
                        .HasColumnType("int");

                    b.Property<int?>("RealEfficiency")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.ToTable((string)null);

                    b.ToView("WholeDivisionInfo", (string)null);
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.views.WholeEmployeeInfo", b =>
                {
                    b.Property<string>("Achivements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("date");

                    b.Property<int?>("Mark")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("WholeEmployeeInfo", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Division", b =>
                {
                    b.HasOne("Term5_RPBDIS_library.models.tables.Mark", "Mark")
                        .WithMany("Divisions")
                        .HasForeignKey("MarkId")
                        .HasConstraintName("FK__Divisions__MarkI__45F365D3");

                    b.HasOne("Term5_RPBDIS_library.models.tables.PlannedEfficiency", "PlannedEfficiency")
                        .WithMany("Divisions")
                        .HasForeignKey("PlannedEfficiencyId")
                        .HasConstraintName("FK__Divisions__Plann__46E78A0C");

                    b.HasOne("Term5_RPBDIS_library.models.tables.RealEfficiency", "RealEfficiency")
                        .WithMany("Divisions")
                        .HasForeignKey("RealEfficiencyId")
                        .HasConstraintName("FK__Divisions__RealE__47DBAE45");

                    b.Navigation("Mark");

                    b.Navigation("PlannedEfficiency");

                    b.Navigation("RealEfficiency");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Employee", b =>
                {
                    b.HasOne("Term5_RPBDIS_library.models.tables.Achievement", "Achievement")
                        .WithMany("Employees")
                        .HasForeignKey("AchievementId")
                        .HasConstraintName("FK__Employees__Achie__440B1D61");

                    b.HasOne("Term5_RPBDIS_library.models.tables.Division", "Division")
                        .WithMany("Employees")
                        .HasForeignKey("DivisionId")
                        .HasConstraintName("FK__Employees__Divis__4316F928");

                    b.HasOne("Term5_RPBDIS_library.models.tables.Mark", "Mark")
                        .WithMany("Employees")
                        .HasForeignKey("MarkId")
                        .HasConstraintName("FK__Employees__MarkI__44FF419A");

                    b.Navigation("Achievement");

                    b.Navigation("Division");

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.PlannedEfficiency", b =>
                {
                    b.HasOne("Term5_RPBDIS_library.models.tables.Date", "Date")
                        .WithMany("PlannedEfficiencies")
                        .HasForeignKey("DateId")
                        .HasConstraintName("FK__PlannedEf__DateI__48CFD27E");

                    b.Navigation("Date");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.RealEfficiency", b =>
                {
                    b.HasOne("Term5_RPBDIS_library.models.tables.Date", "Date")
                        .WithMany("RealEfficiencies")
                        .HasForeignKey("DateId")
                        .HasConstraintName("FK__RealEffic__DateI__49C3F6B7");

                    b.Navigation("Date");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Achievement", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Date", b =>
                {
                    b.Navigation("PlannedEfficiencies");

                    b.Navigation("RealEfficiencies");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Division", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.Mark", b =>
                {
                    b.Navigation("Divisions");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.PlannedEfficiency", b =>
                {
                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("Term5_RPBDIS_library.models.tables.RealEfficiency", b =>
                {
                    b.Navigation("Divisions");
                });
#pragma warning restore 612, 618
        }
    }
}
